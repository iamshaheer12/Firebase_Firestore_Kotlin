Index: app/src/main/res/layout/fragment_forgot_password.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_forgot_password.xml b/app/src/main/res/layout/fragment_forgot_password.xml
new file mode 100644
--- /dev/null	(date 1720515388656)
+++ b/app/src/main/res/layout/fragment_forgot_password.xml	(date 1720515388656)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".View.View.ForgotPassword">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="@string/hello_blank_fragment" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/navigation/app_navigation_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/app_navigation_graph\"\n    app:startDestination=\"@id/noteListingFragment\">\n\n    <fragment\n        android:id=\"@+id/noteDetailsFragment\"\n        android:name=\"com.example.firebase_implementation.View.View.NoteDetailsFragment\"\n        android:label=\"fragment_note_details\"\n        tools:layout=\"@layout/fragment_note_details\" />\n    <fragment\n        android:id=\"@+id/noteListingFragment\"\n        android:name=\"com.example.firebase_implementation.View.View.NoteListingFragment\"\n        android:label=\"fragment_note_listing\"\n        tools:layout=\"@layout/fragment_note_listing\" >\n        <action\n            android:id=\"@+id/action_noteListingFragment_to_noteDetailsFragment\"\n            app:destination=\"@id/noteDetailsFragment\" />\n    </fragment>\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/navigation/app_navigation_graph.xml b/app/src/main/res/navigation/app_navigation_graph.xml
--- a/app/src/main/res/navigation/app_navigation_graph.xml	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/res/navigation/app_navigation_graph.xml	(date 1720540064799)
@@ -3,7 +3,7 @@
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/app_navigation_graph"
-    app:startDestination="@id/noteListingFragment">
+    app:startDestination="@id/signUpPage">
 
     <fragment
         android:id="@+id/noteDetailsFragment"
@@ -19,4 +19,29 @@
             android:id="@+id/action_noteListingFragment_to_noteDetailsFragment"
             app:destination="@id/noteDetailsFragment" />
     </fragment>
+    <fragment
+        android:id="@+id/signUpPage"
+        android:name="com.example.firebase_implementation.View.View.SignUpPage"
+        android:label="SignUpPage"
+        tools:layout="@layout/fragment_sign_up_page"
+        >
+        <action
+            android:id="@+id/action_signUpPage_to_loginPage"
+            app:destination="@id/loginPage" />
+    </fragment>
+    <fragment
+        android:id="@+id/loginPage"
+        android:name="com.example.firebase_implementation.View.View.LoginPage"
+        android:label="fragment_login_page"
+        tools:layout="@layout/fragment_login_page" >
+
+
+
+        <action
+            android:id="@+id/action_loginPage_to_noteListingFragment"
+            app:destination="@id/noteListingFragment" />
+        <action
+            android:id="@+id/action_loginPage_to_signUpPage2"
+            app:destination="@id/signUpPage" />
+    </fragment>
 </navigation>
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/View/ForgotPassword.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/View/ForgotPassword.kt b/app/src/main/java/com/example/firebase_implementation/View/View/ForgotPassword.kt
new file mode 100644
--- /dev/null	(date 1720515541624)
+++ b/app/src/main/java/com/example/firebase_implementation/View/View/ForgotPassword.kt	(date 1720515541624)
@@ -0,0 +1,22 @@
+package com.example.firebase_implementation.View.View
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import com.example.firebase_implementation.R
+
+
+class ForgotPassword : Fragment() {
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_forgot_password, container, false)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/Repository/Di/FirebaseModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.firebase_implementation.View.Repository.Di\n\nimport com.google.firebase.Firebase\nimport com.google.firebase.firestore.FirebaseFirestore\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.components.SingletonComponent\nimport javax.inject.Singleton\n\n\n@InstallIn(SingletonComponent::class)\n@Module\nobject FirebaseModule {\n    @Provides\n    @Singleton\n    fun providerFireStoreInstance():FirebaseFirestore{\n        return FirebaseFirestore.getInstance()\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/FirebaseModule.kt b/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/FirebaseModule.kt
--- a/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/FirebaseModule.kt	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/FirebaseModule.kt	(date 1720526933882)
@@ -1,6 +1,7 @@
 package com.example.firebase_implementation.View.Repository.Di
 
 import com.google.firebase.Firebase
+import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.firestore.FirebaseFirestore
 import dagger.Module
 import dagger.Provides
@@ -17,4 +18,9 @@
     fun providerFireStoreInstance():FirebaseFirestore{
         return FirebaseFirestore.getInstance()
     }
+    @Provides
+    @Singleton
+    fun providerFirebaseAuthInstance():FirebaseAuth{
+        return FirebaseAuth.getInstance()
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/Repository/Di/RepositorModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.firebase_implementation.View.Repository.Di\n\nimport com.example.firebase_implementation.View.Repository.noteRepository\nimport com.example.firebase_implementation.View.Repository.noteRepositoryImpl\nimport com.google.firebase.firestore.FirebaseFirestore\nimport dagger.Module\nimport dagger.Provides\nimport dagger.hilt.InstallIn\nimport dagger.hilt.components.SingletonComponent\nimport javax.inject.Singleton\n\n\n@InstallIn(SingletonComponent::class)\n@Module\nobject RepositorModule {\n\n\n    @Provides\n    @Singleton\n    fun ProvideNoteRepository(\n        database:FirebaseFirestore\n    ):noteRepository{\n\n        return noteRepositoryImpl(database)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/RepositorModule.kt b/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/RepositorModule.kt
--- a/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/RepositorModule.kt	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Repository/Di/RepositorModule.kt	(date 1720526997449)
@@ -1,7 +1,10 @@
 package com.example.firebase_implementation.View.Repository.Di
 
+import com.example.firebase_implementation.View.Repository.authRepository
+import com.example.firebase_implementation.View.Repository.authRepositoryImpl
 import com.example.firebase_implementation.View.Repository.noteRepository
 import com.example.firebase_implementation.View.Repository.noteRepositoryImpl
+import com.google.firebase.auth.FirebaseAuth
 import com.google.firebase.firestore.FirebaseFirestore
 import dagger.Module
 import dagger.Provides
@@ -23,4 +26,13 @@
 
         return noteRepositoryImpl(database)
     }
+    @Provides
+    @Singleton
+    fun ProvideAuthRepository(
+        database:FirebaseFirestore,
+        auth: FirebaseAuth
+    ):authRepository{
+
+        return authRepositoryImpl(database,auth)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/View/SignUpPage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/View/SignUpPage.kt b/app/src/main/java/com/example/firebase_implementation/View/View/SignUpPage.kt
new file mode 100644
--- /dev/null	(date 1720540323042)
+++ b/app/src/main/java/com/example/firebase_implementation/View/View/SignUpPage.kt	(date 1720540323042)
@@ -0,0 +1,173 @@
+package com.example.firebase_implementation.View.View
+
+import android.os.Bundle
+import android.os.Parcel
+import android.os.Parcelable
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.viewModels
+import androidx.navigation.Navigation
+import androidx.navigation.fragment.NavHostFragment
+import com.example.firebase_implementation.R
+import com.example.firebase_implementation.View.Model.User
+import com.example.firebase_implementation.View.Utils.UiStates
+import com.example.firebase_implementation.View.Utils.hide
+import com.example.firebase_implementation.View.Utils.show
+import com.example.firebase_implementation.View.Utils.toast
+import com.example.firebase_implementation.View.ViewModel.AuthViewModel
+import com.example.firebase_implementation.View.ViewModel.NoteViewModel
+import com.example.firebase_implementation.databinding.FragmentNoteDetailsBinding
+import com.example.firebase_implementation.databinding.FragmentSignUpPageBinding
+import dagger.hilt.android.AndroidEntryPoint
+
+@AndroidEntryPoint
+class SignUpPage() : Fragment(), Parcelable {
+    lateinit var binding: FragmentSignUpPageBinding
+    val viewModel: AuthViewModel by viewModels()
+
+    constructor(parcel: Parcel) : this() {
+
+    }
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = FragmentSignUpPageBinding.inflate(layoutInflater)
+        // Inflate the layout for this fragment
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        createUser()
+
+        binding.suSignIn.setOnClickListener{
+            val navHostFragment = requireActivity().supportFragmentManager.findFragmentById(R.id.nav_host) as NavHostFragment
+            val navController = navHostFragment.navController
+            navController.navigate(R.id.action_signUpPage_to_loginPage)
+
+        }
+        binding.suBtn.setOnClickListener{
+            if (validateSignUp()){
+                viewModel.createUser(
+                    email = binding.suUserName.text.toString().trim(),
+                    password = binding.suPassword.text.toString().trim(),
+                    user = User(
+                        id = "",
+                        email = binding.suUserName.text.toString().trim(),
+                        password = binding.suPassword.text.toString().trim(),
+                        name = binding.suName.text.toString().trim()
+                    )
+
+
+
+                )
+
+
+            }
+        }
+    }
+
+
+    private fun isValidEmail(email: String): Boolean {
+        return android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()
+    }
+
+    private fun validateSignUp(): Boolean {
+        val name = binding.suName.text.toString().trim()
+        val username = binding.suUserName.text.toString().trim()
+        val password = binding.suPassword.text.toString().trim()
+
+        if (name.isEmpty()) {
+            binding.suName.error = "Name is required"
+            binding.suName.requestFocus()
+            return false
+        }
+
+        if (username.isEmpty()) {
+            binding.suUserName.error = "Username is required"
+            binding.suUserName.requestFocus()
+            return false
+        }
+
+        if (!isValidEmail(username)) {
+            binding.suUserName.error = "Enter a valid email address"
+            binding.suUserName.requestFocus()
+            return false
+        }
+
+        if (password.isEmpty()) {
+            binding.suPassword.error = "Password is required"
+            binding.suPassword.requestFocus()
+            return false
+        }
+
+        if (password.length < 6) {
+            binding.suPassword.error = "Password must be at least 6 characters"
+            binding.suPassword.requestFocus()
+            return false
+        }
+
+        return true
+    }
+
+
+    private fun createUser(){
+        viewModel.create.observe(viewLifecycleOwner){ state ->
+            when(state){
+                is UiStates.Failure ->{
+                    binding.suProgressBar.hide()
+                    toast(state.error.toString())
+                    Log.e("error1",state.error.toString())
+                }
+                is UiStates.Loading ->{
+                    binding.suProgressBar.show()
+                }
+                is UiStates.Success ->{
+                    val navHostFragment = requireActivity().supportFragmentManager.findFragmentById(R.id.nav_host) as NavHostFragment
+                    val navController = navHostFragment.navController
+                    navController.navigate(R.id.action_signUpPage_to_loginPage
+//                        ,Bundle().apply {
+//                        putString("type","create")
+//                    }
+                    )
+                    binding.suProgressBar.hide()
+
+
+                    ///   requireActivity().onBackPressed()
+                    toast(state.data)
+
+//                 state.data.forEach {
+//                     Log.e(TAG,it.toString())
+//                 }
+                }
+            }
+        }
+
+    }
+
+    override fun writeToParcel(parcel: Parcel, flags: Int) {
+
+    }
+
+    override fun describeContents(): Int {
+        return 0
+    }
+
+    companion object CREATOR : Parcelable.Creator<SignUpPage> {
+        override fun createFromParcel(parcel: Parcel): SignUpPage {
+            return SignUpPage(parcel)
+        }
+
+        override fun newArray(size: Int): Array<SignUpPage?> {
+            return arrayOfNulls(size)
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_sign_up_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_sign_up_page.xml b/app/src/main/res/layout/fragment_sign_up_page.xml
new file mode 100644
--- /dev/null	(date 1720546727700)
+++ b/app/src/main/res/layout/fragment_sign_up_page.xml	(date 1720546727700)
@@ -0,0 +1,199 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:backgroundTint="@color/picture5"
+    tools:context=".View.View.LoginPage">
+
+<!--    <ImageView-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        android:src="@drawable/picture4"-->
+<!--        android:scaleType="centerCrop"-->
+<!--        />-->
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:backgroundTint="@color/white"
+        android:layout_height="match_parent">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:backgroundTint="@color/white"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/sign_up_txt"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="100dp"
+                android:fontFamily=""
+                android:text="Join Diary"
+                android:textColor="#211D1C"
+                android:textFontWeight="900"
+                android:textSize="40dp"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/su_name_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="40dp"
+                android:layout_marginEnd="10dp"
+                app:boxBackgroundColor="@color/white"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/sign_up_txt">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/su_name"
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:hint="Name"
+                    android:inputType="textMultiLine"
+                    android:maxLines="1"
+                    android:padding="12dp"
+                    android:textColor="@android:color/black"
+                    android:textSize="18sp" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/su_user_name_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="10dp"
+                app:boxBackgroundColor="@color/white"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/su_name_layout">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/su_user_name"
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:hint="Email"
+                    android:inputType="textMultiLine"
+                    android:maxLines="1"
+                    android:padding="12dp"
+                    android:textColor="@android:color/black"
+                    android:textSize="18sp" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/su_password_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="10dp"
+                app:boxBackgroundColor="@color/white"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/su_user_name_layout"
+                app:passwordToggleEnabled="true">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/su_password"
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:hint="Password"
+                    android:inputType="textMultiLine"
+                    android:maxLines="1"
+                    android:padding="12dp"
+                    android:textColor="@android:color/black"
+                    android:textSize="18sp" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <LinearLayout
+
+                android:id="@+id/su_linear"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:orientation="horizontal"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/su_password_layout"
+                tools:layout_editor_absoluteY="16dp">
+
+                <TextView
+                    android:id="@+id/already_account"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_vertical"
+                    android:layout_marginTop="8dp"
+                    android:text="Already have account? "
+                    android:textColor="@color/black"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/su_sign_in"
+                    android:clickable="true"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_vertical"
+                    android:layout_marginTop="8dp"
+                     style="@style/TextAppearance.AppCompat.Title"
+                    android:gravity="center"
+                    android:text="Sign In"
+                    android:textColor="@color/black"
+                    android:textFontWeight="900"
+                    android:textSize="26sp" />
+
+            </LinearLayout>
+
+
+            <Button
+                android:id="@+id/su_btn"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:layout_marginTop="30dp"
+                android:layout_marginEnd="8dp"
+                android:backgroundTint="@color/black"
+                android:text="Sign Up"
+                android:textSize="19sp"
+                app:layout_constraintTop_toBottomOf="@+id/su_linear" />
+
+            <Button
+                android:id="@+id/google_sign_up"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="8dp"
+                android:backgroundTint="@color/black"
+                android:drawableStart="@drawable/google"
+                android:drawablePadding="8dp"
+                android:text="Sign up with Google"
+                android:textSize="19sp"
+                app:layout_constraintTop_toBottomOf="@+id/su_btn" />
+
+            <ProgressBar
+                android:id="@+id/su_progress_bar"
+                android:visibility="invisible"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintHorizontal_bias="0.5"
+                app:layout_constraintStart_toStartOf="parent"
+                tools:layout_editor_absoluteY="16dp"
+                android:indeterminateTint="@color/create"
+                app:layout_constraintTop_toTopOf="@id/su_btn"
+                />
+
+
+        </androidx.constraintlayout.widget.ConstraintLayout>
+    </ScrollView>
+</FrameLayout>
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[versions]\nagp = \"8.5.0\"\nfirebaseBom = \"33.1.1\"\nfragmentKtx = \"1.8.1\"\nhiltAndroid = \"2.48\"\nkotlin = \"1.9.0\"\ncoreKtx = \"1.13.1\"\njunit = \"4.13.2\"\njunitVersion = \"1.2.1\"\nespressoCore = \"3.6.1\"\nappcompat = \"1.7.0\"\nlifecycleLivedataKtx = \"2.8.3\"\nmaterial = \"1.12.0\"\nactivity = \"1.9.0\"\nconstraintlayout = \"2.1.4\"\ngoogleGmsGoogleServices = \"4.4.2\"\nfirebaseFirestore = \"25.0.0\"\nnavigationFragmentKtx = \"2.7.7\"\nnavigationUiKtx = \"2.7.7\"\n\n[libraries]\nandroidx-core-ktx = { group = \"androidx.core\", name = \"core-ktx\", version.ref = \"coreKtx\" }\nandroidx-fragment-ktx = { module = \"androidx.fragment:fragment-ktx\", version.ref = \"fragmentKtx\" }\nandroidx-lifecycle-livedata-ktx = { module = \"androidx.lifecycle:lifecycle-livedata-ktx\", version.ref = \"lifecycleLivedataKtx\" }\nfirebase-analytics = { module = \"com.google.firebase:firebase-analytics\" }\nfirebase-bom = { module = \"com.google.firebase:firebase-bom\", version.ref = \"firebaseBom\" }\nhilt-android = { module = \"com.google.dagger:hilt-android\", version.ref = \"hiltAndroid\" }\nhilt-android-compiler = { module = \"com.google.dagger:hilt-android-compiler\", version.ref = \"hiltAndroid\" }\njunit = { group = \"junit\", name = \"junit\", version.ref = \"junit\" }\nandroidx-junit = { group = \"androidx.test.ext\", name = \"junit\", version.ref = \"junitVersion\" }\nandroidx-espresso-core = { group = \"androidx.test.espresso\", name = \"espresso-core\", version.ref = \"espressoCore\" }\nandroidx-appcompat = { group = \"androidx.appcompat\", name = \"appcompat\", version.ref = \"appcompat\" }\nmaterial = { group = \"com.google.android.material\", name = \"material\", version.ref = \"material\" }\nandroidx-activity = { group = \"androidx.activity\", name = \"activity\", version.ref = \"activity\" }\nandroidx-constraintlayout = { group = \"androidx.constraintlayout\", name = \"constraintlayout\", version.ref = \"constraintlayout\" }\nfirebase-firestore = { group = \"com.google.firebase\", name = \"firebase-firestore\", version.ref = \"firebaseFirestore\" }\nandroidx-navigation-fragment-ktx = { group = \"androidx.navigation\", name = \"navigation-fragment-ktx\", version.ref = \"navigationFragmentKtx\" }\nandroidx-navigation-ui-ktx = { group = \"androidx.navigation\", name = \"navigation-ui-ktx\", version.ref = \"navigationUiKtx\" }\n\n[plugins]\nandroid-application = { id = \"com.android.application\", version.ref = \"agp\" }\njetbrains-kotlin-android = { id = \"org.jetbrains.kotlin.android\", version.ref = \"kotlin\" }\ngoogle-gms-google-services = { id = \"com.google.gms.google-services\", version.ref = \"googleGmsGoogleServices\" }\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
--- a/gradle/libs.versions.toml	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/gradle/libs.versions.toml	(date 1720533644073)
@@ -15,6 +15,7 @@
 constraintlayout = "2.1.4"
 googleGmsGoogleServices = "4.4.2"
 firebaseFirestore = "25.0.0"
+materialVersion = "1.4.0"
 navigationFragmentKtx = "2.7.7"
 navigationUiKtx = "2.7.7"
 
@@ -36,6 +37,7 @@
 firebase-firestore = { group = "com.google.firebase", name = "firebase-firestore", version.ref = "firebaseFirestore" }
 androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
 androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" }
+material-v140 = { module = "com.google.android.material:material", version.ref = "materialVersion" }
 
 [plugins]
 android-application = { id = "com.android.application", version.ref = "agp" }
Index: app/src/main/java/com/example/firebase_implementation/View/View/LoginPage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/View/LoginPage.kt b/app/src/main/java/com/example/firebase_implementation/View/View/LoginPage.kt
new file mode 100644
--- /dev/null	(date 1720547278351)
+++ b/app/src/main/java/com/example/firebase_implementation/View/View/LoginPage.kt	(date 1720547278351)
@@ -0,0 +1,113 @@
+package com.example.firebase_implementation.View.View
+
+import android.os.Bundle
+import android.util.Log
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.fragment.app.viewModels
+import androidx.navigation.fragment.NavHostFragment
+import androidx.navigation.fragment.findNavController
+import com.example.firebase_implementation.R
+import com.example.firebase_implementation.View.Utils.UiStates
+import com.example.firebase_implementation.View.Utils.hide
+import com.example.firebase_implementation.View.Utils.show
+import com.example.firebase_implementation.View.Utils.toast
+import com.example.firebase_implementation.View.ViewModel.AuthViewModel
+import com.example.firebase_implementation.databinding.FragmentLoginPageBinding
+import com.example.firebase_implementation.databinding.FragmentSignUpPageBinding
+import dagger.hilt.android.AndroidEntryPoint
+
+@AndroidEntryPoint
+
+class LoginPage : Fragment() {
+
+    lateinit var binding: FragmentLoginPageBinding
+    val viewModel:AuthViewModel by viewModels()
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        binding = FragmentLoginPageBinding.inflate(layoutInflater)
+        // Inflate the layout for this fragment
+        return binding.root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        binding.lgSignUp.setOnClickListener{
+            findNavController().navigate(R.id.action_loginPage_to_signUpPage2)
+        }
+        LoginUser()
+        binding.lgBtn.setOnClickListener{
+            if (validateSignIn()){
+                Log.d("testing sign in", "email = ${binding.lgUserName.text.toString()}")
+                viewModel.loginUser(
+                    email = binding.lgUserName.text.toString(),
+                    password =  binding.lgPassword.text.toString(),
+                )
+            }
+
+        }
+
+    }
+    private fun isValidEmail(email: String): Boolean {
+        return android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()
+    }
+
+    private fun validateSignIn(): Boolean {
+        val username = binding.lgUserName.text.toString().trim()
+        val password = binding.lgPassword.text.toString().trim()
+
+        if (username.isEmpty()) {
+            binding.lgUserName.error = "Username is required"
+            binding.lgUserName.requestFocus()
+            return false
+        }
+
+        if (!isValidEmail(username)) {
+            binding.lgUserName.error = "Enter a valid email address"
+            binding.lgUserName.requestFocus()
+            return false
+        }
+
+        if (password.isEmpty()) {
+            binding.lgPassword.error = "Password is required"
+            binding.lgPassword.requestFocus()
+            return false
+        }
+
+        return true
+    }
+private  fun LoginUser(){
+    viewModel.login.observe(viewLifecycleOwner){ state ->
+        when(state){
+            is UiStates.Failure ->{
+                binding.lgProgressBar.hide()
+                toast(state.error.toString())
+                Log.e("error1",state.error.toString())
+            }
+            is UiStates.Loading ->{
+                binding.lgProgressBar.show()
+            }
+            is UiStates.Success ->{
+                val navHostFragment = requireActivity().supportFragmentManager.findFragmentById(R.id.nav_host) as NavHostFragment
+                val navController = navHostFragment.navController
+                navController.navigate(R.id.action_loginPage_to_noteListingFragment)
+
+                binding.lgProgressBar.hide()
+
+   ///   requireActivity().onBackPressed()
+                toast(state.data)
+
+//                 state.data.forEach {
+//                     Log.e(TAG,it.toString())
+//                 }
+            }
+        }
+    }
+
+}
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_login_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_login_page.xml b/app/src/main/res/layout/fragment_login_page.xml
new file mode 100644
--- /dev/null	(date 1720546727695)
+++ b/app/src/main/res/layout/fragment_login_page.xml	(date 1720546727695)
@@ -0,0 +1,177 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".View.View.LoginPage">
+
+<!--    <ImageView-->
+<!--        android:layout_width="match_parent"-->
+<!--        android:layout_height="match_parent"-->
+<!--        android:src="@drawable/picture5"-->
+<!--        android:scaleType="centerCrop" />-->
+
+    <ScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:fillViewport="true">
+
+        <androidx.constraintlayout.widget.ConstraintLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp">
+
+            <TextView
+                android:id="@+id/login_txt"
+
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="100dp"
+                android:fontFamily=""
+                android:text="Sign In"
+                android:textColor="#211D1C"
+                android:textFontWeight="900"
+                android:textSize="40dp"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="parent" />
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/user_name_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="40dp"
+                android:layout_marginEnd="10dp"
+                app:boxBackgroundColor="@color/white"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/login_txt">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/lg_user_name"
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:hint="Email"
+
+                    android:maxLines="1"
+                    android:padding="12dp"
+                    android:textColor="@android:color/black"
+                    android:textSize="18sp" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <com.google.android.material.textfield.TextInputLayout
+                android:id="@+id/password_layout"
+                style="@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="10dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="10dp"
+                app:boxBackgroundColor="@color/white"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/user_name_layout"
+                app:passwordToggleEnabled="true">
+
+                <com.google.android.material.textfield.TextInputEditText
+                    android:id="@+id/lg_password"
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:hint="Password"
+                    android:maxLines="1"
+                    android:padding="12dp"
+                    android:textColor="@android:color/black"
+                    android:textSize="18sp" />
+            </com.google.android.material.textfield.TextInputLayout>
+
+            <TextView
+                android:id="@+id/forgot_password"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="10dp"
+                android:clickable="true"
+                android:text="Forgot Password?"
+
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toBottomOf="@id/password_layout"
+                tools:layout_editor_absoluteY="16dp" />
+
+            <LinearLayout
+                android:id="@+id/lg_linear"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:orientation="horizontal"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/forgot_password"
+                tools:layout_editor_absoluteY="16dp">
+
+                <TextView
+                    android:id="@+id/no_account"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+
+                    android:layout_marginTop="8dp"
+                    android:text="No account ? "
+                    android:textColor="@color/black"
+                    android:textSize="20sp" />
+
+                <TextView
+                    android:id="@+id/lg_sign_up"
+                    android:clickable="true"
+                    style="@style/TextAppearance.AppCompat.Title"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="8dp"
+                    android:gravity="center"
+                    android:text="Create one"
+                    android:textColor="#1E1F22"
+                    android:textFontWeight="900"
+                    android:textSize="26sp" />
+
+
+            </LinearLayout>
+
+            <Button
+                android:id="@+id/lg_btn"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:layout_marginTop="30dp"
+                android:layout_marginEnd="8dp"
+                android:backgroundTint="@color/black"
+                android:text="Sign In"
+                android:textSize="19sp"
+                app:layout_constraintTop_toBottomOf="@+id/lg_linear" />
+
+            <Button
+                android:id="@+id/google_sign_in"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:layout_marginTop="10dp"
+                android:layout_marginEnd="8dp"
+                android:backgroundTint="@color/black"
+                android:drawableStart="@drawable/google"
+                android:drawablePadding="8dp"
+                android:text="Sign in with Google"
+                android:textSize="19sp"
+                app:layout_constraintTop_toBottomOf="@+id/lg_btn" />
+
+            <ProgressBar
+                android:id="@+id/lg_progress_bar"
+                android:visibility="invisible"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintHorizontal_bias="0.5"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintTop_toTopOf="@+id/lg_btn"
+                tools:layout_editor_absoluteY="16dp" />
+        </androidx.constraintlayout.widget.ConstraintLayout>
+    </ScrollView>
+</FrameLayout>
Index: app/src/main/java/com/example/firebase_implementation/View/Utils/Constants.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.firebase_implementation.View.Utils\n\nobject FireStoreTables {\n    val NOTE = \"note\"\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Utils/Constants.kt b/app/src/main/java/com/example/firebase_implementation/View/Utils/Constants.kt
--- a/app/src/main/java/com/example/firebase_implementation/View/Utils/Constants.kt	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Utils/Constants.kt	(date 1720527694790)
@@ -2,5 +2,6 @@
 
 object FireStoreTables {
     val NOTE = "note"
+    val USER = "user"
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/View/ProfilePage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/View/ProfilePage.kt b/app/src/main/java/com/example/firebase_implementation/View/View/ProfilePage.kt
new file mode 100644
--- /dev/null	(date 1720534631594)
+++ b/app/src/main/java/com/example/firebase_implementation/View/View/ProfilePage.kt	(date 1720534631594)
@@ -0,0 +1,30 @@
+package com.example.firebase_implementation.View.View
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import com.example.firebase_implementation.R
+import dagger.hilt.android.AndroidEntryPoint
+
+// TODO: Rename parameter arguments, choose names that match
+// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+private const val ARG_PARAM1 = "param1"
+private const val ARG_PARAM2 = "param2"
+
+@AndroidEntryPoint
+
+class ProfilePage : Fragment() {
+
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_profile_page, container, false)
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_profile_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_profile_page.xml b/app/src/main/res/layout/fragment_profile_page.xml
new file mode 100644
--- /dev/null	(date 1720515350497)
+++ b/app/src/main/res/layout/fragment_profile_page.xml	(date 1720515350497)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".View.View.ProfilePage">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="@string/hello_blank_fragment" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/Model/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Model/User.kt b/app/src/main/java/com/example/firebase_implementation/View/Model/User.kt
new file mode 100644
--- /dev/null	(date 1720525920845)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Model/User.kt	(date 1720525920845)
@@ -0,0 +1,11 @@
+package com.example.firebase_implementation.View.Model
+
+import com.example.firebase_implementation.View.View.ForgotPassword
+
+data class User (
+    var id: String = "",
+    var name: String = "",
+    var email:String = "",
+    var password:String = ""
+
+)
Index: app/src/main/java/com/example/firebase_implementation/View/Repository/authRepositoryImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepositoryImpl.kt b/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepositoryImpl.kt
new file mode 100644
--- /dev/null	(date 1720546331364)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepositoryImpl.kt	(date 1720546331364)
@@ -0,0 +1,100 @@
+package com.example.firebase_implementation.View.Repository
+
+import com.example.firebase_implementation.View.Model.Note
+import com.example.firebase_implementation.View.Model.User
+import com.example.firebase_implementation.View.Utils.FireStoreTables
+import com.example.firebase_implementation.View.Utils.UiStates
+import com.example.firebase_implementation.View.View.ForgotPassword
+import com.google.firebase.auth.FirebaseAuth
+import com.google.firebase.auth.FirebaseAuthInvalidCredentialsException
+import com.google.firebase.auth.FirebaseAuthUserCollisionException
+import com.google.firebase.auth.FirebaseAuthWeakPasswordException
+import com.google.firebase.firestore.FirebaseFirestore
+import com.google.firebase.firestore.SetOptions
+import com.google.firebase.firestore.toObject
+import java.util.Date
+
+class authRepositoryImpl(
+    var database: FirebaseFirestore,
+    var auth:FirebaseAuth
+): authRepository {
+
+
+    override fun LoginUser(password: String,email: String ,result: (UiStates<String>) -> Unit) {
+        auth.signInWithEmailAndPassword(email,password)
+            .addOnCompleteListener{action ->
+                if(action.isSuccessful){
+                    result.invoke(UiStates.Success("Logged In Successfully"))
+                }
+            }
+            .addOnFailureListener{
+                result.invoke(UiStates.Failure("Failed to log In check email and password "))
+            }
+    }
+
+    override fun CreateUser(email:String,password: String,user: User, result: (UiStates<String>) -> Unit) {
+        auth.createUserWithEmailAndPassword(email,password)
+            .addOnCompleteListener {
+                if (it.isSuccessful){
+                    updateUser(user){state ->
+                        when(state){
+                         is UiStates.Success ->{
+                             result.invoke(UiStates.Success("User Created Successfully"))
+                         }
+                         is UiStates.Failure ->{
+                             result.invoke(UiStates.Failure(state.error))
+                         }
+
+                            else -> {
+                                result.invoke(UiStates.Failure("Authentication failed check email and password"))
+
+
+                            }
+                        }
+
+                    }
+
+
+                }
+                else{
+                    try {
+                        throw it.exception ?: java.lang.Exception("Invalid authentication")
+                    } catch (e: FirebaseAuthWeakPasswordException) {
+                        result.invoke(UiStates.Failure("Authentication failed, Password should be at least 6 characters"))
+                    } catch (e: FirebaseAuthInvalidCredentialsException) {
+                        result.invoke(UiStates.Failure("Authentication failed, Invalid email entered"))
+                    } catch (e: FirebaseAuthUserCollisionException) {
+                        result.invoke(UiStates.Failure("Authentication failed, Email already registered."))
+                    } catch (e: Exception) {
+                        result.invoke(UiStates.Failure(e.message.toString()))
+                    }
+                }
+            }
+            .addOnFailureListener{
+                result.invoke(UiStates.Failure(it.localizedMessage))
+            }
+    }
+
+    override fun updateUser(user: User, result: (UiStates<String>) -> Unit) {
+        val document = database.collection(FireStoreTables.USER).document()
+        user.id = document.id
+        document
+            .set(user)
+            .addOnSuccessListener {
+                result.invoke(UiStates.Success("Note has been created successfully"))
+            }
+            .addOnFailureListener{
+                result.invoke(UiStates.Failure(it.localizedMessage))
+
+            }
+    }
+
+    override fun ForgotPassword(user: User, result: (UiStates<String>) -> Unit) {
+        TODO("Not yet implemented")
+    }
+
+
+
+
+}
+
Index: app/src/main/java/com/example/firebase_implementation/View/Repository/authRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepository.kt b/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepository.kt
new file mode 100644
--- /dev/null	(date 1720541788951)
+++ b/app/src/main/java/com/example/firebase_implementation/View/Repository/authRepository.kt	(date 1720541788951)
@@ -0,0 +1,15 @@
+package com.example.firebase_implementation.View.Repository
+
+import android.provider.ContactsContract.CommonDataKinds.Email
+import com.example.firebase_implementation.View.Model.User
+import com.example.firebase_implementation.View.Utils.UiStates
+import com.example.firebase_implementation.View.View.ForgotPassword
+
+interface authRepository {
+//    fun getNotes(result: (UiStates<String>)->Unit):UiStates<List<Note>>
+fun LoginUser(password: String,email: String, result: (UiStates<String>)->Unit)
+fun CreateUser(password: String,email: String,user: User,result: (UiStates<String>)->Unit)
+fun updateUser(user: User,result: (UiStates<String>) -> Unit)
+fun ForgotPassword(user: User,result: (UiStates<String>)->Unit)
+
+}
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import org.jetbrains.kotlin.gradle.model.Kapt\n\nplugins {\n    alias(libs.plugins.android.application)\n    id(\"com.google.gms.google-services\")\n    id (\"kotlin-kapt\")\n    id (\"com.google.dagger.hilt.android\")\n    alias(libs.plugins.jetbrains.kotlin.android)\n    id(\"kotlin-parcelize\")\n}\n\nandroid {\n    namespace = \"com.example.firebase_implementation\"\n    compileSdk = 34\n\n    defaultConfig {\n        applicationId = \"com.example.firebase_implementation\"\n        minSdk = 21\n        targetSdk = 34\n        versionCode = 1\n        versionName = \"1.0\"\n\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\n    }\n\n    buildTypes {\n        release {\n            isMinifyEnabled = false\n            proguardFiles(\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\n                \"proguard-rules.pro\"\n            )\n        }\n    }\n    compileOptions {\n\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n    }\n    buildFeatures {\n         viewBinding  = true\n    }\n    kotlinOptions {\n        jvmTarget = \"1.8\"\n    }\n}\nkapt {\n    correctErrorTypes  = true\n}\n\n\ndependencies {\n\n    implementation(libs.androidx.core.ktx)\n    implementation(libs.androidx.appcompat)\n    implementation(libs.material)\n    implementation(libs.androidx.activity)\n    implementation(libs.androidx.constraintlayout)\n    implementation(libs.firebase.firestore)\n    implementation(libs.androidx.navigation.fragment.ktx)\n    implementation(libs.androidx.navigation.ui.ktx)\n    testImplementation(libs.junit)\n    implementation(libs.hilt.android)\n    kapt(libs.hilt.android.compiler)\n    implementation(libs.androidx.lifecycle.livedata.ktx)\n    implementation(libs.androidx.fragment.ktx)\n    implementation(platform(libs.firebase.bom))\n    implementation(libs.firebase.analytics)\n    androidTestImplementation(libs.androidx.junit)\n    implementation (\"com.google.android.material:material:1.4.0\")\n\n    androidTestImplementation(libs.androidx.espresso.core)\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/build.gradle.kts	(date 1720534106375)
@@ -15,7 +15,7 @@
 
     defaultConfig {
         applicationId = "com.example.firebase_implementation"
-        minSdk = 21
+        minSdk = 23
         targetSdk = 34
         versionCode = 1
         versionName = "1.0"
@@ -67,7 +67,9 @@
     implementation(platform(libs.firebase.bom))
     implementation(libs.firebase.analytics)
     androidTestImplementation(libs.androidx.junit)
-    implementation ("com.google.android.material:material:1.4.0")
+    implementation (libs.material.v140)
+    implementation ("com.google.firebase:firebase-auth:23.0.0")
+
 
     androidTestImplementation(libs.androidx.espresso.core)
 }
\ No newline at end of file
Index: app/src/main/java/com/example/firebase_implementation/View/ViewModel/AuthViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/firebase_implementation/View/ViewModel/AuthViewModel.kt b/app/src/main/java/com/example/firebase_implementation/View/ViewModel/AuthViewModel.kt
new file mode 100644
--- /dev/null	(date 1720547430334)
+++ b/app/src/main/java/com/example/firebase_implementation/View/ViewModel/AuthViewModel.kt	(date 1720547430334)
@@ -0,0 +1,52 @@
+package com.example.firebase_implementation.View.ViewModel
+
+import com.example.firebase_implementation.View.Model.Note
+import com.example.firebase_implementation.View.Repository.noteRepository
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import com.example.firebase_implementation.View.Model.User
+import com.example.firebase_implementation.View.Repository.authRepository
+import com.example.firebase_implementation.View.Utils.UiStates
+import com.example.firebase_implementation.View.View.ForgotPassword
+import dagger.hilt.android.lifecycle.HiltViewModel
+import javax.inject.Inject
+
+
+@HiltViewModel
+class AuthViewModel @Inject constructor(
+    val repository: authRepository
+):ViewModel() {
+   private val _create  = MutableLiveData<UiStates<String>>()
+   val create :LiveData<UiStates<String>>
+       get() = _create
+
+
+    private val _login  = MutableLiveData<UiStates<String>>()
+    val login :LiveData<UiStates<String>>
+        get() = _login
+
+
+    fun createUser(
+        email:String,
+        password: String,
+        user: User
+    ){
+
+        _create.value = UiStates.Loading
+        repository.CreateUser(email,password,user) {
+            _create.value = it
+        }
+
+    }
+    fun loginUser(email: String,password: String){
+        _login.value = UiStates.Loading
+        repository.LoginUser(email = email, password = password){
+            _login.value = it
+        }
+
+    }
+
+
+
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_note_listing.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/frameLayout\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginBottom=\"4dp\"\n    tools:context=\".View.View.NoteListingFragment\">\n\n    <!-- TODO: Update blank fragment layout -->\n    <Button\n        android:id=\"@+id/create\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"20dp\"\n        android:layout_margin=\"6dp\"\n        android:text=\"Create\"\n        android:textSize=\"20sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.0\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        tools:layout_editor_absoluteY=\"-3dp\" />\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recycler_note\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_marginTop=\"8dp\"\n        app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/create\" />\n\n    <ProgressBar\n        android:id=\"@+id/progress_bar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        android:indeterminateTint=\"@color/black\"\n        app:layout_constraintHorizontal_bias=\"0.5\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintVertical_bias=\"0.5\" />\n\n\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_note_listing.xml b/app/src/main/res/layout/fragment_note_listing.xml
--- a/app/src/main/res/layout/fragment_note_listing.xml	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/res/layout/fragment_note_listing.xml	(date 1720540064785)
@@ -16,6 +16,7 @@
         android:layout_marginTop="20dp"
         android:layout_margin="6dp"
         android:text="Create"
+        android:backgroundTint="@color/picture5"
         android:textSize="20sp"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintHorizontal_bias="0.0"
@@ -41,7 +42,7 @@
         android:layout_height="wrap_content"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
-        android:indeterminateTint="@color/black"
+        android:indeterminateTint="@color/picture5"
         app:layout_constraintHorizontal_bias="0.5"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <color name=\"black\">#FF000000</color>\n    <color name=\"white\">#FFFFFFFF</color>\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/res/values/colors.xml	(date 1720540064789)
@@ -2,4 +2,7 @@
 <resources>
     <color name="black">#FF000000</color>
     <color name="white">#FFFFFFFF</color>
+    <color name="button">#7a4446</color>
+    <color name="create">#983637</color>
+    <color name="picture5">#955227</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_note_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n\n    tools:context=\".View.View.NoteDetailsFragment\">\n\n    <com.google.android.material.textfield.TextInputLayout\n        android:id=\"@+id/noteMsgLayout\"\n        app:layout_goneMarginTop=\"60dp\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"8dp\"\n        android:layout_marginEnd=\"8dp\"\n        android:layout_marginTop=\"60dp\"\n\n        style=\"@style/Widget.MaterialComponents.TextInputLayout.OutlinedBox\"\n        app:layout_constraintTop_toTopOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\">\n\n        <com.google.android.material.textfield.TextInputEditText\n            android:id=\"@+id/noteMsg\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:hint=\"Enter Your message\"\n            android:textSize=\"18sp\"\n            android:textColor=\"@android:color/black\"\n            android:padding=\"12dp\"\n            android:inputType=\"textMultiLine\"\n            android:minLines=\"3\"\n            android:maxLines=\"5\"\n         />\n    </com.google.android.material.textfield.TextInputLayout>\n\n    <Button\n        android:id=\"@+id/add_message_btn\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"16dp\"\n        android:text=\"Add Message\"\n        app:layout_constraintTop_toBottomOf=\"@+id/noteMsgLayout\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\" />\n\n    <ProgressBar\n        android:id=\"@+id/detail_progress_bar\"\n        android:layout_width=\"50dp\"\n        android:layout_height=\"50dp\"\n        android:layout_marginTop=\"16dp\"\n        android:layout_marginBottom=\"16dp\"\n        android:visibility=\"invisible\"\n        app:layout_constraintTop_toBottomOf=\"@+id/add_message_btn\"\n        app:layout_constraintBottom_toBottomOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintEnd_toEndOf=\"parent\" />\n</androidx.constraintlayout.widget.ConstraintLayout>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_note_details.xml b/app/src/main/res/layout/fragment_note_details.xml
--- a/app/src/main/res/layout/fragment_note_details.xml	(revision 7e093a29415354e9219df44e2032fb8a9eb6fd38)
+++ b/app/src/main/res/layout/fragment_note_details.xml	(date 1720540064795)
@@ -41,6 +41,7 @@
         android:layout_height="wrap_content"
         android:layout_margin="16dp"
         android:text="Add Message"
+        android:backgroundTint="@color/picture5"
         app:layout_constraintTop_toBottomOf="@+id/noteMsgLayout"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintEnd_toEndOf="parent" />
@@ -51,6 +52,7 @@
         android:layout_height="50dp"
         android:layout_marginTop="16dp"
         android:layout_marginBottom="16dp"
+        android:indeterminateTint="@color/picture5"
         android:visibility="invisible"
         app:layout_constraintTop_toBottomOf="@+id/add_message_btn"
         app:layout_constraintBottom_toBottomOf="parent"
